#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
#PS1='[\u@\h \W]\$ '
#PS1="λ \W \\$ "

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

export EDITOR="vim"
export PS1="\[\e[42m\]\`parse_git_branch\`\[\e[m\] \[\e[31m\]♆\[\e[m\] \W \\$ "
#export PS1="\[\e[42m\]\`parse_git_branch\`\[\e[m\] \[\e[31m\]λ\[\e[m\] \W \\$ "



# ALIASES
alias brc="vim ~/.bashrc"
alias confi3="vim ~/.config/i3/config"
alias confpoly="vim ~/.config/polybar/config"
alias ll="ls -1"
alias la="ls -la"
alias pcr="sudo pacman -Rns \$(pacman -Qtdq)"
alias pipes="pipes -f 60 -p 3 -s 8 -R"
alias gdb="gdb -q"
alias goSong='cd "/home/dan/Music/$(dirname "$(mpc status -f "%file%" | head -n1)")"'
alias sshpi="ssh pi@192.168.0.25"
alias mountDrive="systemctl --user start rclone@personal.service"




[ -f ~/.fzf.colors ] && source ~/.fzf.colors
