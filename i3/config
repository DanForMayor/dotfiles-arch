# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $term urxvt
set $browser firefox

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:DejaVu Sans Mono 10px

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
#
#bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle


####
# THESE SETTINGS ARE CANCER
####
# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+Shift+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# toggle sticky
bindsym $mod+s sticky toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#Compositor -- compton
exec_always --no-startup-id ~/.config/compton/compton.sh

# Custom bar -- polybar
exec_always --no-startup-id ~/.config/polybar/polybar.sh

# Remove that stupid title bar
new_window 1pixel

# Keymaps for adding or removing the title bar
bindsym $mod+b border normal
bindsym $mod+Shift+b border 1pixel

# Keymaps for opening vertical or horizontal terminals
bindsym $mod+apostrophe		split horizontal ;; exec $term -name tiled
bindsym $mod+slash			split vertical ;; exec $term -name tiled

# File Browser
bindsym $mod+t exec --no-startup-id Thunar

# GAPS
gaps inner 10
gaps outer 5

bindsym $mod+g gaps inner all set 10; gaps outer all set 5

#############
# Media keys
#############

# Media scripts/commands
set $volLower ~/.config/dunstVolumeScripts/volume.sh down
set $volRaise ~/.config/dunstVolumeScripts/volume.sh up

set $muteToggle ~/.config/dunstVolumeScripts/volume.sh mute

set $player			ncmpcpp								# PLAYER START
set $playToggle  	~/Scripts/song_notify/toggle_mpd.sh	# PLAY/PAUSE
set $songNext		mpc next							# NEXT SONG
set $songPrev		mpc prev							# PREV SONG
set $songBack		mpc seek -10						# REWIND 10 SECONDS
set $songFwrd		mpc seek +10						# FORWARD 10 SECONDS




# Volume script
bindsym $mod+minus exec --no-startup-id $volLower
bindsym $mod+plus exec --no-startup-id $volRaise

bindsym XF86AudioLowerVolume exec --no-startup-id $volLower
bindsym XF86AudioRaiseVolume exec --no-startup-id $volRaise

bindsym $mod+m exec --no-startup-id $muteToggle
bindsym XF86AudioMute exec --no-startup-id $muteToggle


# CMUS
#bindsym $mod+m exec --no-startup-id $term -e cmus			# PLAYER START
#bindsym $mod+p exec --no-startup-id cmus-remote -u			# PLAY/PAUSE
#bindsym $mod+period exec --no-startup-id cmus-remote -n		# NEXT SONG
#bindsym $mod+comma exec --no-startup-id cmus-remote -r			# PREV SONG
#bindsym $mod+bracketleft exec --no-startup-id cmus-remote -k -10	# REWIND 10 SECONDS
#bindsym $mod+bracketright exec --no-startup-id cmus-remote -k +10	# FORWARD 10 SECONDS

######################
# Generic media key combos
######################

# These are just for mapping media keys to their respective function
# The functions can be found above, at the beginning of the "Media Keys" section

bindsym XF86AudioPlay exec --no-startup-id $playToggle
bindsym XF86AudioNext exec --no-startup-id $songNext
bindsym XF86AudioPrev exec --no-startup-id $songPrev



######################
# MPD + NCMPCPP
######################
bindsym $mod+Shift+plus exec --no-startup-id mpc volume +5
bindsym $mod+Shift+minus exec --no-startup-id mpc volume -5

bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id mpc volume +5
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id mpc volume -5


bindsym $mod+Shift+m		exec --no-startup-id $term -e $player	# LAUNCH THE PLAYER IN CONSOLE
bindsym $mod+p			exec --no-startup-id $playToggle	# PLAY/PAUSE
bindsym $mod+period		exec --no-startup-id $songNext		# NEXT SONG
bindsym $mod+comma		exec --no-startup-id $songPrev		# PREV SONG
bindsym $mod+bracketleft	exec --no-startup-id $songBack		# REWIND 10 SECONDS
bindsym $mod+bracketright	exec --no-startup-id $songFwrd		# FORWARD 10 SECONDS



# This is for forcing the song change popup, just to see the current song
bindsym $mod+o			exec --no-startup-id Scripts/song_notify/mpd_notification.sh


# Scroll through workspaces
bindsym --whole-window $mod+button5 workspace next_on_output
bindsym --whole-window $mod+button4 workspace prev_on_output
bindsym $mod+Tab workspace back_and_forth
bindsym Mod1+Tab workspace back_and_forth

# screenshot
# THIS USES A CUSTOM SCRIPT
bindsym Print exec --no-startup-id Scripts/screenshot.sh
bindsym $mod+Print exec --no-startup-id Scripts/screenshot.sh -s



# Default some stuff to floating
for_window [class="feh"] floating enable
for_window [class="mpv"] floating enable
for_window [class="URxvt"] floating enable
for_window [class="URxvt" instance="tiled"] floating disable
for_window [title="Microsoft Teams Notification"] floating enable

# Colors
client.focused #555555 #555555 #ffffff #2e9ef4     #336067


# Open browser
bindsym $mod+w exec --no-startup-id $browser


